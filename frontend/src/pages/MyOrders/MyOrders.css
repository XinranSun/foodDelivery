/* import React, { useContext, useEffect } from "react";
import "./MyOrders.css";
import { StoreContext } from "../../context/StoreContext";
import axios from "axios";
import { assets } from "../../assets/assets";
const MyOrders = () => {
  const { url, token } = useContext(StoreContext);
  const [data, setData] = React.useState([]);
  const fetchOrders = async () => {
    const response = await axios.post(
      `${url}/api/order/userorders`,
      {},
      {
        headers: {
          token,
        },
      }
    );
    setData(response.data.data);
    console.log(response.data.data);
  };
  useEffect(() => {
    if (token) {
      fetchOrders();
    }
  }, [token]);
  return (
    <div className="my-orders">
      <h2>my orders</h2>
      <div className="container">
        {data.map((order, index) => {
          return (
            <div className="my-orders-order" key={index}>
              <img src={assets.parcel_icon} alt="" />
              <p>
                {order.items.map((item, index) => {
                  if (index === order.items.length - 1) {
                    return item.name + "x" + item.quantity;
                  } else {
                    return item.name + "x" + item.quantity + ", ";
                  }
                })}
              </p>
              <p>${order.amount}.00</p>
              <p>Items:{order.items.length}</p>
              <p>
                <span>&#x25cf;</span>
                <b>{order.status}</b>
              </p>
              <button>Track Order</button>
            </div>
          );
        })}
      </div>
    </div>
  );
};

export default MyOrders;
 */

.my-orders {
  margin: 50px 0px;
}
.my-orders .container {
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin-top: 30px;
}
.my-orders-order {
 display: grid;
 grid-template-columns: 0.5fr 2fr 1fr 1fr 2fr 1fr;
 align-items: center;
 gap: 30px;
 font-size: 14px;
 padding: 10px 20px;
 color: #454545;
 border: 1px solid tomato;
}
.my-orders-order img {
  width: 50px;
}

.my-orders-order p span {
  color: tomato;
}
.my-orders-order p b {
  font-weight: 500;
  color: #454545;
}
.my-orders-order button {
  background-color: tomato;
  color: #454545;
  padding: 12px 0px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

@media (max-width: 900px) {
    .my-orders-order {
        grid-template-columns: 1fr 2fr 1fr ;
        row-gap: 5px;
        font-size: 12px;
    }
    .my-orders-order button {
        font-size: 10px;
    }
}